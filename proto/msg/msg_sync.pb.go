// Code generated by protoc-gen-go. DO NOT EDIT.
// source: msg/msg_sync.proto

package msg

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 错误通知
type S2C_ERROR struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2C_ERROR) Reset()         { *m = S2C_ERROR{} }
func (m *S2C_ERROR) String() string { return proto.CompactTextString(m) }
func (*S2C_ERROR) ProtoMessage()    {}
func (*S2C_ERROR) Descriptor() ([]byte, []int) {
	return fileDescriptor_1112232358b7c826, []int{0}
}

func (m *S2C_ERROR) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2C_ERROR.Unmarshal(m, b)
}
func (m *S2C_ERROR) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2C_ERROR.Marshal(b, m, deterministic)
}
func (m *S2C_ERROR) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_ERROR.Merge(m, src)
}
func (m *S2C_ERROR) XXX_Size() int {
	return xxx_messageInfo_S2C_ERROR.Size(m)
}
func (m *S2C_ERROR) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_ERROR.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_ERROR proto.InternalMessageInfo

func (m *S2C_ERROR) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

// 同步各种类型数量
type S2C_SYNC_NUM struct {
	Nums                 []*NUM   `protobuf:"bytes,1,rep,name=nums,proto3" json:"nums,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2C_SYNC_NUM) Reset()         { *m = S2C_SYNC_NUM{} }
func (m *S2C_SYNC_NUM) String() string { return proto.CompactTextString(m) }
func (*S2C_SYNC_NUM) ProtoMessage()    {}
func (*S2C_SYNC_NUM) Descriptor() ([]byte, []int) {
	return fileDescriptor_1112232358b7c826, []int{1}
}

func (m *S2C_SYNC_NUM) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2C_SYNC_NUM.Unmarshal(m, b)
}
func (m *S2C_SYNC_NUM) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2C_SYNC_NUM.Marshal(b, m, deterministic)
}
func (m *S2C_SYNC_NUM) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_SYNC_NUM.Merge(m, src)
}
func (m *S2C_SYNC_NUM) XXX_Size() int {
	return xxx_messageInfo_S2C_SYNC_NUM.Size(m)
}
func (m *S2C_SYNC_NUM) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_SYNC_NUM.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_SYNC_NUM proto.InternalMessageInfo

func (m *S2C_SYNC_NUM) GetNums() []*NUM {
	if m != nil {
		return m.Nums
	}
	return nil
}

func init() {
	proto.RegisterType((*S2C_ERROR)(nil), "msg.S2C_ERROR")
	proto.RegisterType((*S2C_SYNC_NUM)(nil), "msg.S2C_SYNC_NUM")
}

func init() {
	proto.RegisterFile("msg/msg_sync.proto", fileDescriptor_1112232358b7c826)
}

var fileDescriptor_1112232358b7c826 = []byte{
	// 149 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xca, 0x2d, 0x4e, 0xd7,
	0xcf, 0x2d, 0x4e, 0x8f, 0x2f, 0xae, 0xcc, 0x4b, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62,
	0xce, 0x2d, 0x4e, 0x97, 0x82, 0x4b, 0x24, 0xe7, 0xe7, 0xe6, 0x42, 0x24, 0x94, 0xe4, 0xb9, 0x38,
	0x83, 0x8d, 0x9c, 0xe3, 0x5d, 0x83, 0x82, 0xfc, 0x83, 0x84, 0x84, 0xb8, 0x58, 0x92, 0xf3, 0x53,
	0x52, 0x25, 0x18, 0x15, 0x18, 0x35, 0x58, 0x83, 0xc0, 0x6c, 0x25, 0x1d, 0x2e, 0x1e, 0x90, 0x82,
	0xe0, 0x48, 0x3f, 0xe7, 0x78, 0xbf, 0x50, 0x5f, 0x21, 0x19, 0x2e, 0x96, 0xbc, 0xd2, 0xdc, 0x62,
	0x09, 0x46, 0x05, 0x66, 0x0d, 0x6e, 0x23, 0x0e, 0xbd, 0xdc, 0xe2, 0x74, 0x3d, 0xbf, 0x50, 0xdf,
	0x20, 0xb0, 0xa8, 0x93, 0x70, 0x94, 0x60, 0x59, 0x7a, 0x7c, 0x41, 0x51, 0x7e, 0x96, 0x3e, 0xd8,
	0x7c, 0x90, 0x75, 0x49, 0x6c, 0x60, 0xa6, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xe6, 0x02, 0x0b,
	0xfd, 0x99, 0x00, 0x00, 0x00,
}
