// Code generated by protoc-gen-go. DO NOT EDIT.
// source: msg/msg_player.proto

package msg

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 角色信息
type C2S_ROLE_INFO struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_ROLE_INFO) Reset()         { *m = C2S_ROLE_INFO{} }
func (m *C2S_ROLE_INFO) String() string { return proto.CompactTextString(m) }
func (*C2S_ROLE_INFO) ProtoMessage()    {}
func (*C2S_ROLE_INFO) Descriptor() ([]byte, []int) {
	return fileDescriptor_c83b6d64f22bacf0, []int{0}
}

func (m *C2S_ROLE_INFO) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_C2S_ROLE_INFO.Unmarshal(m, b)
}
func (m *C2S_ROLE_INFO) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_C2S_ROLE_INFO.Marshal(b, m, deterministic)
}
func (m *C2S_ROLE_INFO) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_ROLE_INFO.Merge(m, src)
}
func (m *C2S_ROLE_INFO) XXX_Size() int {
	return xxx_messageInfo_C2S_ROLE_INFO.Size(m)
}
func (m *C2S_ROLE_INFO) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_ROLE_INFO.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_ROLE_INFO proto.InternalMessageInfo

type S2C_ROLE_INFO struct {
	Uid                  int64           `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Rid                  int64           `protobuf:"varint,2,opt,name=rid,proto3" json:"rid,omitempty"`
	Name                 string          `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	ServId               int32           `protobuf:"varint,4,opt,name=serv_id,json=servId,proto3" json:"serv_id,omitempty"`
	Head                 int32           `protobuf:"varint,5,opt,name=head,proto3" json:"head,omitempty"`
	HeadFrame            int32           `protobuf:"varint,6,opt,name=head_frame,json=headFrame,proto3" json:"head_frame,omitempty"`
	Lv                   int32           `protobuf:"varint,7,opt,name=lv,proto3" json:"lv,omitempty"`
	VipLv                int32           `protobuf:"varint,8,opt,name=vip_lv,json=vipLv,proto3" json:"vip_lv,omitempty"`
	VipExp               int32           `protobuf:"varint,9,opt,name=vip_exp,json=vipExp,proto3" json:"vip_exp,omitempty"`
	Ce                   int32           `protobuf:"varint,10,opt,name=ce,proto3" json:"ce,omitempty"`
	MemberId             int32           `protobuf:"varint,11,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	TitleId              int32           `protobuf:"varint,12,opt,name=title_id,json=titleId,proto3" json:"title_id,omitempty"`
	GuildId              int32           `protobuf:"varint,13,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
	GuildName            string          `protobuf:"bytes,14,opt,name=guild_name,json=guildName,proto3" json:"guild_name,omitempty"`
	CurrentRanking       int32           `protobuf:"varint,15,opt,name=current_ranking,json=currentRanking,proto3" json:"current_ranking,omitempty"`
	CreatedTs            int64           `protobuf:"varint,16,opt,name=created_ts,json=createdTs,proto3" json:"created_ts,omitempty"`
	Exp                  int64           `protobuf:"varint,17,opt,name=exp,proto3" json:"exp,omitempty"`
	Res                  map[int32]int64 `protobuf:"bytes,18,rep,name=res,proto3" json:"res,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	RechargeAmount       int32           `protobuf:"varint,19,opt,name=recharge_amount,json=rechargeAmount,proto3" json:"recharge_amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *S2C_ROLE_INFO) Reset()         { *m = S2C_ROLE_INFO{} }
func (m *S2C_ROLE_INFO) String() string { return proto.CompactTextString(m) }
func (*S2C_ROLE_INFO) ProtoMessage()    {}
func (*S2C_ROLE_INFO) Descriptor() ([]byte, []int) {
	return fileDescriptor_c83b6d64f22bacf0, []int{1}
}

func (m *S2C_ROLE_INFO) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2C_ROLE_INFO.Unmarshal(m, b)
}
func (m *S2C_ROLE_INFO) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2C_ROLE_INFO.Marshal(b, m, deterministic)
}
func (m *S2C_ROLE_INFO) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_ROLE_INFO.Merge(m, src)
}
func (m *S2C_ROLE_INFO) XXX_Size() int {
	return xxx_messageInfo_S2C_ROLE_INFO.Size(m)
}
func (m *S2C_ROLE_INFO) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_ROLE_INFO.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_ROLE_INFO proto.InternalMessageInfo

func (m *S2C_ROLE_INFO) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *S2C_ROLE_INFO) GetRid() int64 {
	if m != nil {
		return m.Rid
	}
	return 0
}

func (m *S2C_ROLE_INFO) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *S2C_ROLE_INFO) GetServId() int32 {
	if m != nil {
		return m.ServId
	}
	return 0
}

func (m *S2C_ROLE_INFO) GetHead() int32 {
	if m != nil {
		return m.Head
	}
	return 0
}

func (m *S2C_ROLE_INFO) GetHeadFrame() int32 {
	if m != nil {
		return m.HeadFrame
	}
	return 0
}

func (m *S2C_ROLE_INFO) GetLv() int32 {
	if m != nil {
		return m.Lv
	}
	return 0
}

func (m *S2C_ROLE_INFO) GetVipLv() int32 {
	if m != nil {
		return m.VipLv
	}
	return 0
}

func (m *S2C_ROLE_INFO) GetVipExp() int32 {
	if m != nil {
		return m.VipExp
	}
	return 0
}

func (m *S2C_ROLE_INFO) GetCe() int32 {
	if m != nil {
		return m.Ce
	}
	return 0
}

func (m *S2C_ROLE_INFO) GetMemberId() int32 {
	if m != nil {
		return m.MemberId
	}
	return 0
}

func (m *S2C_ROLE_INFO) GetTitleId() int32 {
	if m != nil {
		return m.TitleId
	}
	return 0
}

func (m *S2C_ROLE_INFO) GetGuildId() int32 {
	if m != nil {
		return m.GuildId
	}
	return 0
}

func (m *S2C_ROLE_INFO) GetGuildName() string {
	if m != nil {
		return m.GuildName
	}
	return ""
}

func (m *S2C_ROLE_INFO) GetCurrentRanking() int32 {
	if m != nil {
		return m.CurrentRanking
	}
	return 0
}

func (m *S2C_ROLE_INFO) GetCreatedTs() int64 {
	if m != nil {
		return m.CreatedTs
	}
	return 0
}

func (m *S2C_ROLE_INFO) GetExp() int64 {
	if m != nil {
		return m.Exp
	}
	return 0
}

func (m *S2C_ROLE_INFO) GetRes() map[int32]int64 {
	if m != nil {
		return m.Res
	}
	return nil
}

func (m *S2C_ROLE_INFO) GetRechargeAmount() int32 {
	if m != nil {
		return m.RechargeAmount
	}
	return 0
}

type C2S_ROLE_LVUP_REQ struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_ROLE_LVUP_REQ) Reset()         { *m = C2S_ROLE_LVUP_REQ{} }
func (m *C2S_ROLE_LVUP_REQ) String() string { return proto.CompactTextString(m) }
func (*C2S_ROLE_LVUP_REQ) ProtoMessage()    {}
func (*C2S_ROLE_LVUP_REQ) Descriptor() ([]byte, []int) {
	return fileDescriptor_c83b6d64f22bacf0, []int{2}
}

func (m *C2S_ROLE_LVUP_REQ) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_C2S_ROLE_LVUP_REQ.Unmarshal(m, b)
}
func (m *C2S_ROLE_LVUP_REQ) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_C2S_ROLE_LVUP_REQ.Marshal(b, m, deterministic)
}
func (m *C2S_ROLE_LVUP_REQ) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_ROLE_LVUP_REQ.Merge(m, src)
}
func (m *C2S_ROLE_LVUP_REQ) XXX_Size() int {
	return xxx_messageInfo_C2S_ROLE_LVUP_REQ.Size(m)
}
func (m *C2S_ROLE_LVUP_REQ) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_ROLE_LVUP_REQ.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_ROLE_LVUP_REQ proto.InternalMessageInfo

type S2C_ROLE_LVUP_RET struct {
	Lv                   int32    `protobuf:"varint,1,opt,name=lv,proto3" json:"lv,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2C_ROLE_LVUP_RET) Reset()         { *m = S2C_ROLE_LVUP_RET{} }
func (m *S2C_ROLE_LVUP_RET) String() string { return proto.CompactTextString(m) }
func (*S2C_ROLE_LVUP_RET) ProtoMessage()    {}
func (*S2C_ROLE_LVUP_RET) Descriptor() ([]byte, []int) {
	return fileDescriptor_c83b6d64f22bacf0, []int{3}
}

func (m *S2C_ROLE_LVUP_RET) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2C_ROLE_LVUP_RET.Unmarshal(m, b)
}
func (m *S2C_ROLE_LVUP_RET) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2C_ROLE_LVUP_RET.Marshal(b, m, deterministic)
}
func (m *S2C_ROLE_LVUP_RET) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_ROLE_LVUP_RET.Merge(m, src)
}
func (m *S2C_ROLE_LVUP_RET) XXX_Size() int {
	return xxx_messageInfo_S2C_ROLE_LVUP_RET.Size(m)
}
func (m *S2C_ROLE_LVUP_RET) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_ROLE_LVUP_RET.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_ROLE_LVUP_RET proto.InternalMessageInfo

func (m *S2C_ROLE_LVUP_RET) GetLv() int32 {
	if m != nil {
		return m.Lv
	}
	return 0
}

func init() {
	proto.RegisterType((*C2S_ROLE_INFO)(nil), "msg.C2S_ROLE_INFO")
	proto.RegisterType((*S2C_ROLE_INFO)(nil), "msg.S2C_ROLE_INFO")
	proto.RegisterMapType((map[int32]int64)(nil), "msg.S2C_ROLE_INFO.ResEntry")
	proto.RegisterType((*C2S_ROLE_LVUP_REQ)(nil), "msg.C2S_ROLE_LVUP_REQ")
	proto.RegisterType((*S2C_ROLE_LVUP_RET)(nil), "msg.S2C_ROLE_LVUP_RET")
}

func init() {
	proto.RegisterFile("msg/msg_player.proto", fileDescriptor_c83b6d64f22bacf0)
}

var fileDescriptor_c83b6d64f22bacf0 = []byte{
	// 459 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x92, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xc7, 0xe5, 0x38, 0x5f, 0x9e, 0x92, 0xa4, 0xd9, 0x14, 0xb1, 0x50, 0x21, 0x45, 0xe1, 0x40,
	0x2e, 0xa4, 0x52, 0x90, 0x10, 0xe2, 0x06, 0x55, 0x2a, 0x45, 0x8a, 0x5a, 0x70, 0x0b, 0x07, 0x2e,
	0x2b, 0x37, 0x1e, 0xdc, 0xa5, 0xb6, 0x63, 0xad, 0xed, 0x55, 0xf2, 0x74, 0xbc, 0x1a, 0x9a, 0x59,
	0xa7, 0x88, 0x93, 0x67, 0x7e, 0x7f, 0xef, 0x7c, 0xc3, 0x59, 0x56, 0x26, 0x17, 0x59, 0x99, 0xa8,
	0x22, 0x8d, 0x0e, 0x68, 0x16, 0x85, 0xd9, 0x55, 0x3b, 0xe1, 0x67, 0x65, 0x32, 0x1b, 0xc1, 0xe0,
	0x72, 0x79, 0xab, 0xc2, 0x9b, 0xcd, 0x4a, 0xad, 0xaf, 0xaf, 0x6e, 0x66, 0x7f, 0xda, 0x30, 0xb8,
	0x5d, 0x5e, 0xfe, 0x23, 0xe2, 0x14, 0xfc, 0x5a, 0xc7, 0xd2, 0x9b, 0x7a, 0x73, 0x3f, 0x24, 0x93,
	0x88, 0xd1, 0xb1, 0x6c, 0x39, 0x62, 0x74, 0x2c, 0x04, 0xb4, 0xf3, 0x28, 0x43, 0xe9, 0x4f, 0xbd,
	0x79, 0x10, 0xb2, 0x2d, 0x5e, 0x40, 0xaf, 0x44, 0x63, 0x95, 0x8e, 0x65, 0x7b, 0xea, 0xcd, 0x3b,
	0x61, 0x97, 0xdc, 0x35, 0xff, 0xfc, 0x80, 0x51, 0x2c, 0x3b, 0x4c, 0xd9, 0x16, 0xaf, 0x01, 0xe8,
	0xab, 0x7e, 0x19, 0x0a, 0xd3, 0x65, 0x25, 0x20, 0x72, 0x45, 0x40, 0x0c, 0xa1, 0x95, 0x5a, 0xd9,
	0x63, 0xdc, 0x4a, 0xad, 0x78, 0x0e, 0x5d, 0xab, 0x0b, 0x95, 0x5a, 0xd9, 0x67, 0xd6, 0xb1, 0xba,
	0xd8, 0x58, 0x4a, 0x49, 0x18, 0xf7, 0x85, 0x0c, 0x5c, 0x4a, 0xab, 0x8b, 0xd5, 0xbe, 0xa0, 0xf7,
	0x5b, 0x94, 0xe0, 0xde, 0x6f, 0x51, 0x9c, 0x43, 0x90, 0x61, 0x76, 0x8f, 0x86, 0xaa, 0x3b, 0x61,
	0xdc, 0x77, 0x60, 0x1d, 0x8b, 0x97, 0xd0, 0xaf, 0x74, 0x95, 0x22, 0x69, 0xcf, 0x58, 0xeb, 0xb1,
	0xef, 0xa4, 0xa4, 0xd6, 0x69, 0x4c, 0xd2, 0xc0, 0x49, 0xec, 0xaf, 0xb9, 0x03, 0x27, 0xf1, 0x20,
	0x86, 0x3c, 0x88, 0x80, 0xc9, 0x35, 0x75, 0xf0, 0x16, 0x46, 0xdb, 0xda, 0x18, 0xcc, 0x2b, 0x65,
	0xa2, 0xfc, 0x51, 0xe7, 0x89, 0x1c, 0x71, 0x80, 0x61, 0x83, 0x43, 0x47, 0x29, 0xce, 0xd6, 0x60,
	0x54, 0x61, 0xac, 0xaa, 0x52, 0x9e, 0xf2, 0x8c, 0x83, 0x86, 0xdc, 0x95, 0x34, 0x7b, 0x6a, 0x6f,
	0xec, 0x66, 0x8f, 0xfb, 0x42, 0xbc, 0x03, 0xdf, 0x60, 0x29, 0xc5, 0xd4, 0x9f, 0x9f, 0x2c, 0xcf,
	0x17, 0x59, 0x99, 0x2c, 0xfe, 0x5b, 0xe0, 0x22, 0xc4, 0x72, 0x95, 0x57, 0xe6, 0x10, 0xd2, 0x7f,
	0x54, 0x88, 0xc1, 0xed, 0x43, 0x64, 0x12, 0x54, 0x51, 0xb6, 0xab, 0xf3, 0x4a, 0x4e, 0x5c, 0x21,
	0x47, 0xfc, 0x99, 0xe9, 0xab, 0x0f, 0xd0, 0x3f, 0xbe, 0xa4, 0xac, 0x8f, 0x78, 0xe0, 0x1b, 0xe8,
	0x84, 0x64, 0x8a, 0x33, 0xe8, 0xd8, 0x28, 0xad, 0xb1, 0xb9, 0x02, 0xe7, 0x7c, 0x6a, 0x7d, 0xf4,
	0x66, 0x13, 0x18, 0x3f, 0x9d, 0xd4, 0xe6, 0xc7, 0xf7, 0xaf, 0x2a, 0x5c, 0x7d, 0x9b, 0xbd, 0x81,
	0xf1, 0x53, 0x51, 0x0d, 0xbc, 0x6b, 0xb6, 0xea, 0x1d, 0xb7, 0xfa, 0x65, 0xf2, 0x73, 0x6c, 0x13,
	0x55, 0x98, 0xdd, 0xef, 0x0b, 0x3e, 0x51, 0xba, 0xd9, 0xfb, 0x2e, 0x9b, 0xef, 0xff, 0x06, 0x00,
	0x00, 0xff, 0xff, 0x97, 0x35, 0x7a, 0x53, 0xc5, 0x02, 0x00, 0x00,
}
