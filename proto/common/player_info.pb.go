// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common/player_info.proto

package common

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PlayerBrief struct {
	PlayerId             int64    `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Head                 int32    `protobuf:"varint,3,opt,name=head,proto3" json:"head,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerBrief) Reset()         { *m = PlayerBrief{} }
func (m *PlayerBrief) String() string { return proto.CompactTextString(m) }
func (*PlayerBrief) ProtoMessage()    {}
func (*PlayerBrief) Descriptor() ([]byte, []int) {
	return fileDescriptor_73b59154299079e0, []int{0}
}

func (m *PlayerBrief) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerBrief.Unmarshal(m, b)
}
func (m *PlayerBrief) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerBrief.Marshal(b, m, deterministic)
}
func (m *PlayerBrief) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerBrief.Merge(m, src)
}
func (m *PlayerBrief) XXX_Size() int {
	return xxx_messageInfo_PlayerBrief.Size(m)
}
func (m *PlayerBrief) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerBrief.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerBrief proto.InternalMessageInfo

func (m *PlayerBrief) GetPlayerId() int64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *PlayerBrief) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PlayerBrief) GetHead() int32 {
	if m != nil {
		return m.Head
	}
	return 0
}

type PlayerDetail struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerDetail) Reset()         { *m = PlayerDetail{} }
func (m *PlayerDetail) String() string { return proto.CompactTextString(m) }
func (*PlayerDetail) ProtoMessage()    {}
func (*PlayerDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_73b59154299079e0, []int{1}
}

func (m *PlayerDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerDetail.Unmarshal(m, b)
}
func (m *PlayerDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerDetail.Marshal(b, m, deterministic)
}
func (m *PlayerDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerDetail.Merge(m, src)
}
func (m *PlayerDetail) XXX_Size() int {
	return xxx_messageInfo_PlayerDetail.Size(m)
}
func (m *PlayerDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerDetail.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerDetail proto.InternalMessageInfo

func init() {
	proto.RegisterType((*PlayerBrief)(nil), "common.PlayerBrief")
	proto.RegisterType((*PlayerDetail)(nil), "common.PlayerDetail")
}

func init() {
	proto.RegisterFile("common/player_info.proto", fileDescriptor_73b59154299079e0)
}

var fileDescriptor_73b59154299079e0 = []byte{
	// 149 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x48, 0xce, 0xcf, 0xcd,
	0xcd, 0xcf, 0xd3, 0x2f, 0xc8, 0x49, 0xac, 0x4c, 0x2d, 0x8a, 0xcf, 0xcc, 0x4b, 0xcb, 0xd7, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x83, 0xc8, 0x28, 0x05, 0x71, 0x71, 0x07, 0x80, 0x25, 0x9d,
	0x8a, 0x32, 0x53, 0xd3, 0x84, 0xa4, 0xb9, 0x38, 0x61, 0x6a, 0x53, 0x24, 0x18, 0x15, 0x18, 0x35,
	0x98, 0x83, 0x38, 0x20, 0x02, 0x9e, 0x29, 0x42, 0x42, 0x5c, 0x2c, 0x79, 0x89, 0xb9, 0xa9, 0x12,
	0x4c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x60, 0x36, 0x48, 0x2c, 0x23, 0x35, 0x31, 0x45, 0x82, 0x59,
	0x81, 0x51, 0x83, 0x35, 0x08, 0xcc, 0x56, 0xe2, 0xe3, 0xe2, 0x81, 0x98, 0xe9, 0x92, 0x5a, 0x92,
	0x98, 0x99, 0xe3, 0x24, 0x1a, 0x25, 0x5c, 0x96, 0x5e, 0x50, 0x94, 0x9f, 0xa5, 0x0f, 0xb6, 0x5b,
	0x1f, 0x62, 0x75, 0x12, 0x1b, 0x98, 0x67, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xe5, 0x3c, 0x75,
	0xaa, 0xa5, 0x00, 0x00, 0x00,
}
